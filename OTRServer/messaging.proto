syntax = "proto2";

package OTRMessenger;

message Credentials {
	required bytes username = 1;
	required bytes passwordHash = 2;
	required bool  signUp = 3;
	required bool  admin = 4;
}

message Message {
	required bytes fromUsername = 1;
	required bytes toUsername = 2;
	required bytes text = 3;
	required bytes signature = 4;
}

message ClientInfo {
	required bytes username = 1;
	optional bytes key = 2;
	optional bool  online =3;
}

enum AdminRequest {
	LAUNCH = 1;
	TERMINATE = 2;
	RESET = 3;
	GET_CURRENT_STATE = 4;
	GET_ALL_USERS = 5;
	GET_ONLINE_USERS = 6;
	GET_ALL_KEYS = 7;
}

enum ServerState {
	SERVER_UNKNOWN = 0;
	SERVER_LAUNCHED = 1;
	SERVER_STOPPED = 2;
	SERVER_RESET = 3;
}

message msgClientToServer {
	optional Credentials credentials = 1;
	optional bytes updatedKey = 2;
	optional AdminRequest adminReq = 3;
	optional bytes requestInfoUsername = 4; // username of person to request the key, if online etc.
	optional Message msg = 5;
	optional bool requestKeyPairChange = 6; // Sergey: I am not sure I understand how usecase #9 works

}

message msgServerToClient {
	repeated ClientInfo users = 1;
	optional Message msg = 2;
	optional ServerState state = 3;
	optional bool loginSuccess = 4;
}

